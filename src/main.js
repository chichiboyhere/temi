import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from "react";
import ReactDOM from "react-dom/client";
import { createBrowserRouter, createRoutesFromElements, Route, RouterProvider, } from "react-router-dom";
import { HelmetProvider } from "react-helmet-async";
// import 'bootstrap/dist/css/bootstrap.min.css'
import App from "./App";
import "./index.css";
import HomePage from "./pages/HomePage";
import ProductPage from "./pages/ProductPage";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { StoreProvider } from "./Store";
import CartPage from "./pages/CartPage";
import SigninPage from "./pages/SigninPage";
import SignupPage from "./pages/SignupPage";
import ShippingAddressPage from "./pages/ShippingAddressPage";
import PaymentMethodPage from "./pages/PaymentMethodPage";
import ProtectedRoute from "./components/ProtectedRoute";
import PlaceOrderPage from "./pages/PlaceOrderPage";
import OrderPage from "./pages/OrderPage";
import { PayPalScriptProvider } from "@paypal/react-paypal-js";
import OrderHistoryPage from "./pages/OrderHistoryPage";
import ProfilePage from "./pages/ProfilePage";
import DashboardPage from "./pages/DashboardPage";
import OrderListPage from "./pages/OrderListPage";
import UserListPage from "./pages/UserListPage";
import ProductUploadPage from "./pages/ProductUploadPage";
import ProductEditPage from "./pages/ProductEditPage";
import ProductListPage from "./pages/ProductListPage";
import UserEditPage from "./pages/UserEditPage";
const router = createBrowserRouter(createRoutesFromElements(_jsxs(Route, { path: "/", element: _jsx(App, {}), children: [_jsx(Route, { index: true, element: _jsx(HomePage, {}) }), _jsx(Route, { path: "product/:slug", element: _jsx(ProductPage, {}) }), _jsx(Route, { path: "cart", element: _jsx(CartPage, {}) }), _jsx(Route, { path: "signin", element: _jsx(SigninPage, {}) }), _jsx(Route, { path: "signup", element: _jsx(SignupPage, {}) }), _jsxs(Route, { path: "", element: _jsx(ProtectedRoute, {}), children: [_jsx(Route, { path: "shipping", element: _jsx(ShippingAddressPage, {}) }), _jsx(Route, { path: "payment", element: _jsx(PaymentMethodPage, {}) }), _jsx(Route, { path: "placeorder", element: _jsx(PlaceOrderPage, {}) }), _jsx(Route, { path: "/order/:id", element: _jsx(OrderPage, {}) }), _jsx(Route, { path: "/orderhistory", element: _jsx(OrderHistoryPage, {}) }), _jsx(Route, { path: "/profile", element: _jsx(ProfilePage, {}) }), _jsx(Route, { path: "/admin/dashboard", element: _jsx(DashboardPage, {}) }), _jsx(Route, { path: "/admin/orders", element: _jsx(OrderListPage, {}) }), _jsx(Route, { path: "/admin/users", element: _jsx(UserListPage, {}) }), _jsx(Route, { path: "/admin/productUpload", element: _jsx(ProductUploadPage, {}) }), _jsx(Route, { path: "/admin/products", element: _jsx(ProductListPage, {}) }), _jsx(Route, { path: "/admin/product/:id", element: _jsx(ProductEditPage, {}) }), _jsx(Route, { path: "/admin/user/:id", element: _jsx(UserEditPage, {}) })] })] })));
const queryClient = new QueryClient();
ReactDOM.createRoot(document.getElementById("root")).render(_jsx(React.StrictMode, { children: _jsx(StoreProvider, { children: _jsx(PayPalScriptProvider, { options: { "client-id": "sb" }, deferLoading: true, children: _jsx(HelmetProvider, { children: _jsxs(QueryClientProvider, { client: queryClient, children: [_jsx(RouterProvider, { router: router }), _jsx(ReactQueryDevtools, { initialIsOpen: false })] }) }) }) }) }));
